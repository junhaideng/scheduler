/// Generated by https://quicktype.io
use serde::{Deserialize, Serialize};
use serde_json;

#[derive(Serialize, Deserialize, Default, Debug)]
pub struct Response {
    #[serde(rename = "data", default)]
    pub data: Data,
}

#[derive(Serialize, Deserialize, Default, Debug)]
pub struct Data {
    #[serde(rename = "todayRecord", default)]
    pub today_record: Vec<TodayRecord>,
}

#[derive(Serialize, Deserialize, Default, Debug)]
pub struct TodayRecord {
    #[serde(rename = "date", default)]
    pub date: String,

    #[serde(rename = "userStatus", default)]
    pub user_status: String,

    #[serde(rename = "question", default)]
    pub question: Question,

    #[serde(rename = "lastSubmission", default)]
    pub last_submission: Option<LastSubmission>,
}

#[derive(Serialize, Deserialize, Default, Debug)]
pub struct LastSubmission {
    #[serde(rename = "id", default)]
    pub id: String,
}

#[derive(Serialize, Deserialize, Default, Debug)]
pub struct Question {
    #[serde(rename = "questionId", default)]
    pub question_id: String,

    #[serde(rename = "frontendQuestionId", default)]
    pub frontend_question_id: String,

    #[serde(rename = "difficulty", default)]
    pub difficulty: String,

    #[serde(rename = "title", default)]
    pub title: String,

    #[serde(rename = "titleCn", default)]
    pub title_cn: String,

    #[serde(rename = "titleSlug", default)]
    pub title_slug: String,

    #[serde(rename = "paidOnly", default)]
    pub paid_only: bool,

    #[serde(rename = "freqBar", default)]
    pub freq_bar: Option<serde_json::Value>,

    #[serde(rename = "isFavor", default)]
    pub is_favor: bool,

    #[serde(rename = "acRate", default)]
    pub ac_rate: f64,

    #[serde(rename = "status", default)]
    pub status: Option<String>,

    #[serde(rename = "solutionNum", default)]
    pub solution_num: i64,

    #[serde(rename = "hasVideoSolution", default)]
    pub has_video_solution: bool,

    #[serde(rename = "topicTags", default)]
    pub topic_tags: Vec<TopicTag>,

    #[serde(rename = "extra", default)]
    pub extra: Extra,
}

#[derive(Serialize, Deserialize, Default, Debug)]
pub struct Extra {
    #[serde(rename = "topCompanyTags", default)]
    pub top_company_tags: Vec<TopCompanyTag>,
}

#[derive(Serialize, Deserialize, Default, Debug)]
pub struct TopCompanyTag {
    #[serde(rename = "imgUrl", default)]
    pub img_url: String,

    #[serde(rename = "slug", default)]
    pub slug: String,

    #[serde(rename = "numSubscribed", default)]
    pub num_subscribed: i64,
}

#[derive(Serialize, Deserialize, Default, Debug)]
pub struct TopicTag {
    #[serde(rename = "name", default)]
    pub name: String,

    #[serde(rename = "nameTranslated", default)]
    pub name_translated: String,

    #[serde(rename = "id", default)]
    pub id: String,
}